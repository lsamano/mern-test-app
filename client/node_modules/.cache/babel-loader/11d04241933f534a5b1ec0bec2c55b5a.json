{"ast":null,"code":"var _jsxFileName = \"/Users/lsamano/Development/code/personal/mern-test-app/client/src/App.js\";\nimport React from 'react';\nimport { Store } from './Store';\nimport ProjectItem from './components/ProjectItem';\n\nfunction App() {\n  // Get state and dispatch from the Store\n  const _React$useContext = React.useContext(Store),\n        state = _React$useContext.state,\n        dispatch = _React$useContext.dispatch;\n\n  const setProjects = dataJSON => ({\n    type: 'SET_PROJECTS',\n    payload: dataJSON.projects\n  });\n\n  const fetchProjects = async () => {\n    const data = await fetch('http://localhost:3000/api/projects');\n    const dataJSON = await data.json();\n    return dispatch(setProjects(dataJSON));\n  }; // Equivalent of componentDidMount & componentDidUpdate\n\n\n  React.useEffect(() => {\n    state.allProjects.length === 0 && fetchProjects();\n  });\n  return React.createElement(React.Fragment, null, \"All Projects:\", state.allProjects.map(proj => React.createElement(ProjectItem, {\n    project: proj,\n    key: proj._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lsamano/Development/code/personal/mern-test-app/client/src/App.js"],"names":["React","Store","ProjectItem","App","useContext","state","dispatch","setProjects","dataJSON","type","payload","projects","fetchProjects","data","fetch","json","useEffect","allProjects","length","map","proj","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,GAAT,GAAe;AACb;AADa,4BAEeH,KAAK,CAACI,UAAN,CAAiBH,KAAjB,CAFf;AAAA,QAELI,KAFK,qBAELA,KAFK;AAAA,QAEEC,QAFF,qBAEEA,QAFF;;AAIb,QAAMC,WAAW,GAAGC,QAAQ,KAAK;AAC/BC,IAAAA,IAAI,EAAE,cADyB;AAE/BC,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFa,GAAL,CAA5B;;AAKA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAAxB;AACA,UAAMN,QAAQ,GAAG,MAAMK,IAAI,CAACE,IAAL,EAAvB;AACA,WAAOT,QAAQ,CAACC,WAAW,CAACC,QAAD,CAAZ,CAAf;AACH,GAJC,CATa,CAef;;;AACAR,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBX,IAAAA,KAAK,CAACY,WAAN,CAAkBC,MAAlB,KAA6B,CAA7B,IAAkCN,aAAa,EAA/C;AACD,GAFD;AAIE,SACE,2DAEIP,KAAK,CAACY,WAAN,CAAkBE,GAAlB,CAAsBC,IAAI,IAAI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,IAAtB;AAA4B,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CAFJ,CADF;AAMD;;AAED,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport { Store } from './Store';\nimport ProjectItem from './components/ProjectItem'\n\nfunction App() {\n  // Get state and dispatch from the Store\n  const { state, dispatch } = React.useContext(Store);\n\n  const setProjects = dataJSON => ({\n    type: 'SET_PROJECTS',\n    payload: dataJSON.projects\n  })\n\n  const fetchProjects = async () => {\n    const data = await fetch('http://localhost:3000/api/projects');\n    const dataJSON = await data.json();\n    return dispatch(setProjects(dataJSON));\n};\n\n// Equivalent of componentDidMount & componentDidUpdate\nReact.useEffect(() => {\n  state.allProjects.length === 0 && fetchProjects();\n});\n\n  return (\n    <>\n      All Projects:\n      { state.allProjects.map(proj => <ProjectItem project={proj} key={proj._id} /> )}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}