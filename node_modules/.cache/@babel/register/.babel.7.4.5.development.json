{
  "{\"sourceRoot\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"filename\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _user = _interopRequireDefault(require(\"./models/user\"));\n\nvar _donation = _interopRequireDefault(require(\"./models/donation\"));\n\nvar _project = _interopRequireDefault(require(\"./models/project\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\n\nvar router = _express[\"default\"].Router();\n\n_dotenv[\"default\"].config();\n\nvar API_PORT = process.env.PORT || 3000;\nvar DB_URI = process.env.DB_URI;\n\n_mongoose[\"default\"].connect(DB_URI, {\n  useNewUrlParser: true\n});\n\nvar db = _mongoose[\"default\"].connection;\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_bodyParser[\"default\"].json()); // app.use(logger('dev'));\n\nrouter.get('/', function (req, res) {\n  res.json({\n    hello: \"world\"\n  });\n}); // User\n\nrouter.get('/users', function (req, res) {\n  _user[\"default\"].find(function (error, users) {\n    if (error) {\n      return res.json({\n        success: false,\n        error: error\n      });\n    } else {\n      return res.json({\n        success: true,\n        users: users\n      });\n    }\n  });\n});\nrouter.get('/users/:id', function (req, res) {\n  _user[\"default\"].findById(req.params.id, function (error, user) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true,\n      user: user\n    });\n  });\n});\nrouter.post('/users', function (req, res) {\n  var user = new _user[\"default\"](req.body);\n  user.save(function (error, newUser) {\n    if (error) {\n      return res.json({\n        success: false,\n        error: error\n      });\n    } else {\n      return res.json({\n        success: true,\n        user: newUser\n      });\n    }\n  });\n});\nrouter.put('/users/:id', function (req, res) {\n  _user[\"default\"].findById(req.params.id, function (error, user) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    var _req$body = req.body,\n        username = _req$body.username,\n        password = _req$body.password,\n        bio = _req$body.bio;\n    if (username) user.username = username;\n    if (password) user.password = password;\n    if (bio) user.bio = bio;\n    user.save(function (error, savedUser) {\n      if (error) return res.json({\n        success: false,\n        error: error\n      });\n      return res.json({\n        success: true,\n        user: savedUser\n      });\n    });\n  });\n});\nrouter[\"delete\"]('/users/:id', function (req, res) {\n  _user[\"default\"].deleteOne({\n    _id: req.params.id\n  }, function (error) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true\n    });\n  });\n}); // Donation\n\nrouter.get('/donations', function (req, res) {\n  _donation[\"default\"].find().populate('user').populate('project').exec(function (error, donations) {\n    if (error) {\n      return res.json({\n        success: false,\n        data: error\n      });\n    } else {\n      return res.json({\n        success: true,\n        donations: donations\n      });\n    }\n  });\n});\nrouter.get('/donations/:id', function (req, res) {\n  _donation[\"default\"].findById(req.params.id, function (error, donation) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true,\n      donation: donation\n    });\n  });\n});\nrouter.post('/donations', function (req, res) {\n  var donation = new _donation[\"default\"](req.body);\n  donation.save(function (error, newDonation) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true,\n      donation: newDonation\n    });\n  });\n}); // TODO: Need delete to also refund donation\n// Project\n\nrouter.get('/projects', function (req, res) {\n  _project[\"default\"].find().populate('owner').exec(function (error, projects) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true,\n      projects: projects\n    });\n  });\n});\nrouter.get('/projects/:id', function (req, res) {\n  _project[\"default\"].findById(req.params.id, function (error, project) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true,\n      project: project\n    });\n  });\n});\nrouter.post('/projects', function (req, res) {\n  var project = new _project[\"default\"](req.body);\n  project.save(function (error, newProject) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true,\n      project: newProject\n    });\n  });\n});\nrouter.put('/projects/:id', function (req, res) {\n  _project[\"default\"].findById(req.params.id, function (error, project) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    var _req$body2 = req.body,\n        name = _req$body2.name,\n        owner = _req$body2.owner,\n        goal = _req$body2.goal;\n    if (name) project.name = name;\n    if (owner) project.owner = owner;\n    if (goal) project.goal = goal;\n    project.save(function (error, savedProject) {\n      if (error) return res.json({\n        success: false,\n        error: error\n      });\n      return res.json({\n        success: true,\n        project: savedProject\n      });\n    });\n  });\n});\nrouter[\"delete\"]('/projects/:id', function (req, res) {\n  _project[\"default\"].deleteOne({\n    _id: req.params.id\n  }, function (error) {\n    if (error) return res.json({\n      success: false,\n      error: error\n    });\n    return res.json({\n      success: true\n    });\n  });\n}); // TODO: Need to refund all backers\n\napp.use('/api', router);\napp.listen(API_PORT, function () {\n  return console.log(\"Success! Listening on port \".concat(API_PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZG90ZW52IiwiY29uZmlnIiwiQVBJX1BPUlQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIkRCX1VSSSIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwiaGVsbG8iLCJVc2VyIiwiZmluZCIsInVzZXJzIiwic3VjY2VzcyIsImZpbmRCeUlkIiwicGFyYW1zIiwiaWQiLCJ1c2VyIiwicG9zdCIsImJvZHkiLCJzYXZlIiwibmV3VXNlciIsInB1dCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJiaW8iLCJzYXZlZFVzZXIiLCJkZWxldGVPbmUiLCJfaWQiLCJEb25hdGlvbiIsInBvcHVsYXRlIiwiZXhlYyIsImRvbmF0aW9ucyIsImRhdGEiLCJkb25hdGlvbiIsIm5ld0RvbmF0aW9uIiwiUHJvamVjdCIsInByb2plY3RzIiwicHJvamVjdCIsIm5ld1Byb2plY3QiLCJuYW1lIiwib3duZXIiLCJnb2FsIiwic2F2ZWRQcm9qZWN0IiwibGlzdGVuIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaOztBQUNBLElBQU1DLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjs7QUFDQUMsbUJBQU9DLE1BQVA7O0FBRUEsSUFBTUMsUUFBUSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFyQztBQUNBLElBQU1DLE1BQU0sR0FBR0gsT0FBTyxDQUFDQyxHQUFSLENBQVlFLE1BQTNCOztBQUVBQyxxQkFB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QUFXRCxDQVpEO0FBY0E3RCxNQUFNLFVBQU4sQ0FBYyxlQUFkLEVBQStCLFVBQUN5QixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMzQzRCLHNCQUFRVCxTQUFSLENBQWtCO0FBQUVDLElBQUFBLEdBQUcsRUFBQ3JCLEdBQUcsQ0FBQ1EsTUFBSixDQUFXQztBQUFqQixHQUFsQixFQUF5QyxVQUFBakIsS0FBSyxFQUFJO0FBQ2hELFFBQUlBLEtBQUosRUFBVyxPQUFPUyxHQUFHLENBQUNILElBQUosQ0FBUztBQUFFUSxNQUFBQSxPQUFPLEVBQUUsS0FBWDtBQUFrQmQsTUFBQUEsS0FBSyxFQUFMQTtBQUFsQixLQUFULENBQVA7QUFDWCxXQUFPUyxHQUFHLENBQUNILElBQUosQ0FBUztBQUFFUSxNQUFBQSxPQUFPLEVBQUU7QUFBWCxLQUFULENBQVA7QUFDRCxHQUhEO0FBSUQsQ0FMRCxFLENBTUE7O0FBRUFoQyxHQUFHLENBQUNvQixHQUFKLENBQVEsTUFBUixFQUFnQm5CLE1BQWhCO0FBRUFELEdBQUcsQ0FBQytELE1BQUosQ0FBV3pELFFBQVgsRUFBcUI7QUFBQSxTQUFNVyxPQUFPLENBQUMrQyxHQUFSLHNDQUEwQzFELFFBQTFDLEVBQU47QUFBQSxDQUFyQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGVpemxzYW1hbm8vRGV2ZWxvcG1lbnQvY29kZS9QZXJzb25hbCBQcm9qZWN0cy9tZXJuLXRlc3QtYXBwL2JhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgVXNlciBmcm9tICcuL21vZGVscy91c2VyJ1xuaW1wb3J0IERvbmF0aW9uIGZyb20gJy4vbW9kZWxzL2RvbmF0aW9uJ1xuaW1wb3J0IFByb2plY3QgZnJvbSAnLi9tb2RlbHMvcHJvamVjdCdcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52J1xuXG5jb25zdCBhcHAgPSBleHByZXNzKClcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbmRvdGVudi5jb25maWcoKVxuXG5jb25zdCBBUElfUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMFxuY29uc3QgREJfVVJJID0gcHJvY2Vzcy5lbnYuREJfVVJJXG5cbm1vbmdvb3NlLmNvbm5lY3QoIERCX1VSSSwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUgfSApXG5cbnZhciBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb25cbmRiLm9uKCdlcnJvcicsIGNvbnNvbGUuZXJyb3IuYmluZChjb25zb2xlLCAnTW9uZ29EQiBjb25uZWN0aW9uIGVycm9yOicpKVxuXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbi8vIGFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5cbnJvdXRlci5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLmpzb24oe2hlbGxvOiBcIndvcmxkXCJ9KVxufSlcblxuLy8gVXNlclxucm91dGVyLmdldCgnL3VzZXJzJywgKHJlcSwgcmVzKSA9PiB7XG4gIFVzZXIuZmluZCgoZXJyb3IsIHVzZXJzKSA9PiB7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGVycm9yIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIHVzZXJzOiB1c2VycyB9KVxuICAgIH1cbiAgfSlcbn0pXG5cbnJvdXRlci5nZXQoJy91c2Vycy86aWQnLCAocmVxLCByZXMpID0+IHtcbiAgVXNlci5maW5kQnlJZChyZXEucGFyYW1zLmlkLCAoZXJyb3IsIHVzZXIpID0+IHtcbiAgICBpZiAoZXJyb3IpIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvciB9KVxuICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIHVzZXIgfSlcbiAgfSlcbn0pXG5cbnJvdXRlci5wb3N0KCcvdXNlcnMnLCAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgdXNlciA9IG5ldyBVc2VyKHJlcS5ib2R5KVxuICB1c2VyLnNhdmUoKGVycm9yLCBuZXdVc2VyKSA9PiB7XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGVycm9yIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIHVzZXI6IG5ld1VzZXIgfSlcbiAgICB9XG4gIH0pXG59KVxuXG5yb3V0ZXIucHV0KCcvdXNlcnMvOmlkJywgKHJlcSwgcmVzKSA9PiB7XG4gIFVzZXIuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCwgKGVycm9yLCB1c2VyKSA9PiB7XG4gICAgaWYgKGVycm9yKSByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGVycm9yIH0pXG4gICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQsIGJpbyB9ID0gcmVxLmJvZHlcbiAgICBpZiAodXNlcm5hbWUpIHVzZXIudXNlcm5hbWUgPSB1c2VybmFtZVxuICAgIGlmIChwYXNzd29yZCkgdXNlci5wYXNzd29yZCA9IHBhc3N3b3JkXG4gICAgaWYgKGJpbykgdXNlci5iaW8gPSBiaW9cbiAgICB1c2VyLnNhdmUoKGVycm9yLCBzYXZlZFVzZXIpID0+IHtcbiAgICAgIGlmIChlcnJvcikgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiBlcnJvciB9KVxuICAgICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSwgdXNlcjogc2F2ZWRVc2VyIH0pXG4gICAgfSlcbiAgfSlcbn0pXG5cbnJvdXRlci5kZWxldGUoJy91c2Vycy86aWQnLCAocmVxLCByZXMpID0+IHtcbiAgVXNlci5kZWxldGVPbmUoeyBfaWQ6cmVxLnBhcmFtcy5pZCB9LCBlcnJvciA9PiB7XG4gICAgaWYgKGVycm9yKSByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3IgfSlcbiAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlIH0pXG4gIH0pXG59KVxuXG4vLyBEb25hdGlvblxucm91dGVyLmdldCgnL2RvbmF0aW9ucycsIChyZXEsIHJlcykgPT4ge1xuICBEb25hdGlvbi5maW5kKClcbiAgLnBvcHVsYXRlKCd1c2VyJylcbiAgLnBvcHVsYXRlKCdwcm9qZWN0JylcbiAgLmV4ZWMoKGVycm9yLCBkb25hdGlvbnMpID0+IHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBkYXRhOiBlcnJvciB9KVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBkb25hdGlvbnM6IGRvbmF0aW9ucyB9KVxuICAgIH1cbiAgfSlcbn0pXG5cbnJvdXRlci5nZXQoJy9kb25hdGlvbnMvOmlkJywgKHJlcSwgcmVzKSA9PiB7XG4gIERvbmF0aW9uLmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQsIChlcnJvciwgZG9uYXRpb24pID0+IHtcbiAgICBpZiAoZXJyb3IpIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvciB9KVxuICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGRvbmF0aW9uIH0pXG4gIH0pXG59KVxuXG5yb3V0ZXIucG9zdCgnL2RvbmF0aW9ucycsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBkb25hdGlvbiA9IG5ldyBEb25hdGlvbihyZXEuYm9keSlcbiAgZG9uYXRpb24uc2F2ZSgoZXJyb3IsIG5ld0RvbmF0aW9uKSA9PiB7XG4gICAgaWYgKGVycm9yKSByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGVycm9yIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSwgZG9uYXRpb246IG5ld0RvbmF0aW9uIH0pXG4gIH0pXG59KVxuXG4vLyBUT0RPOiBOZWVkIGRlbGV0ZSB0byBhbHNvIHJlZnVuZCBkb25hdGlvblxuXG4vLyBQcm9qZWN0XG5yb3V0ZXIuZ2V0KCcvcHJvamVjdHMnLCAocmVxLCByZXMpID0+IHtcbiAgUHJvamVjdC5maW5kKClcbiAgLnBvcHVsYXRlKCdvd25lcicpXG4gIC5leGVjKChlcnJvciwgcHJvamVjdHMpID0+IHtcbiAgICBpZiAoZXJyb3IpIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogZXJyb3IgfSlcbiAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBwcm9qZWN0cyB9KVxuICB9KVxufSlcblxucm91dGVyLmdldCgnL3Byb2plY3RzLzppZCcsIChyZXEsIHJlcykgPT4ge1xuICBQcm9qZWN0LmZpbmRCeUlkKHJlcS5wYXJhbXMuaWQsIChlcnJvciwgcHJvamVjdCkgPT4ge1xuICAgIGlmIChlcnJvcikgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSwgcHJvamVjdCB9KVxuICB9KVxufSlcblxucm91dGVyLnBvc3QoJy9wcm9qZWN0cycsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCBwcm9qZWN0ID0gbmV3IFByb2plY3QocmVxLmJvZHkpXG4gIHByb2plY3Quc2F2ZSgoZXJyb3IsIG5ld1Byb2plY3QpID0+IHtcbiAgICBpZiAoZXJyb3IpIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogZXJyb3IgfSlcbiAgICByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBwcm9qZWN0OiBuZXdQcm9qZWN0IH0pXG4gIH0pXG59KVxuXG5yb3V0ZXIucHV0KCcvcHJvamVjdHMvOmlkJywgKHJlcSwgcmVzKSA9PiB7XG4gIFByb2plY3QuZmluZEJ5SWQocmVxLnBhcmFtcy5pZCwgKGVycm9yLCBwcm9qZWN0KSA9PiB7XG4gICAgaWYgKGVycm9yKSByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3IgfSlcbiAgICBjb25zdCB7IG5hbWUsIG93bmVyLCBnb2FsIH0gPSByZXEuYm9keVxuICAgIGlmIChuYW1lKSBwcm9qZWN0Lm5hbWUgPSBuYW1lXG4gICAgaWYgKG93bmVyKSBwcm9qZWN0Lm93bmVyID0gb3duZXJcbiAgICBpZiAoZ29hbCkgcHJvamVjdC5nb2FsID0gZ29hbFxuICAgIHByb2plY3Quc2F2ZSgoZXJyb3IsIHNhdmVkUHJvamVjdCkgPT4ge1xuICAgICAgaWYgKGVycm9yKSByZXR1cm4gcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3IgfSlcbiAgICAgIHJldHVybiByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIHByb2plY3Q6IHNhdmVkUHJvamVjdCB9KVxuICAgIH0pXG4gIH0pXG59KVxuXG5yb3V0ZXIuZGVsZXRlKCcvcHJvamVjdHMvOmlkJywgKHJlcSwgcmVzKSA9PiB7XG4gIFByb2plY3QuZGVsZXRlT25lKHsgX2lkOnJlcS5wYXJhbXMuaWQgfSwgZXJyb3IgPT4ge1xuICAgIGlmIChlcnJvcikgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yIH0pXG4gICAgcmV0dXJuIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSB9KVxuICB9KVxufSlcbi8vIFRPRE86IE5lZWQgdG8gcmVmdW5kIGFsbCBiYWNrZXJzXG5cbmFwcC51c2UoJy9hcGknLCByb3V0ZXIpO1xuXG5hcHAubGlzdGVuKEFQSV9QT1JULCAoKSA9PiBjb25zb2xlLmxvZyhgU3VjY2VzcyEgTGlzdGVuaW5nIG9uIHBvcnQgJHtBUElfUE9SVH1gKSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "router",
        "express",
        "Router",
        "dotenv",
        "config",
        "API_PORT",
        "process",
        "env",
        "PORT",
        "DB_URI",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "hello",
        "User",
        "find",
        "users",
        "success",
        "findById",
        "params",
        "id",
        "user",
        "post",
        "body",
        "save",
        "newUser",
        "put",
        "username",
        "password",
        "bio",
        "savedUser",
        "deleteOne",
        "_id",
        "Donation",
        "populate",
        "exec",
        "donations",
        "data",
        "donation",
        "newDonation",
        "Project",
        "projects",
        "project",
        "newProject",
        "name",
        "owner",
        "goal",
        "savedProject",
        "listen",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport mongoose from 'mongoose'\nimport User from './models/user'\nimport Donation from './models/donation'\nimport Project from './models/project'\nimport dotenv from 'dotenv'\n\nconst app = express()\nconst router = express.Router()\ndotenv.config()\n\nconst API_PORT = process.env.PORT || 3000\nconst DB_URI = process.env.DB_URI\n\nmongoose.connect( DB_URI, { useNewUrlParser: true } )\n\nvar db = mongoose.connection\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'))\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n// app.use(logger('dev'));\n\nrouter.get('/', (req, res) => {\n  res.json({hello: \"world\"})\n})\n\n// User\nrouter.get('/users', (req, res) => {\n  User.find((error, users) => {\n    if (error) {\n      return res.json({ success: false, error: error })\n    } else {\n      return res.json({ success: true, users: users })\n    }\n  })\n})\n\nrouter.get('/users/:id', (req, res) => {\n  User.findById(req.params.id, (error, user) => {\n    if (error) return res.json({ success: false, error })\n    return res.json({ success: true, user })\n  })\n})\n\nrouter.post('/users', (req, res) => {\n  const user = new User(req.body)\n  user.save((error, newUser) => {\n    if (error) {\n      return res.json({ success: false, error: error })\n    } else {\n      return res.json({ success: true, user: newUser })\n    }\n  })\n})\n\nrouter.put('/users/:id', (req, res) => {\n  User.findById(req.params.id, (error, user) => {\n    if (error) return res.json({ success: false, error: error })\n    const { username, password, bio } = req.body\n    if (username) user.username = username\n    if (password) user.password = password\n    if (bio) user.bio = bio\n    user.save((error, savedUser) => {\n      if (error) return res.json({ success: false, error: error })\n      return res.json({ success: true, user: savedUser })\n    })\n  })\n})\n\nrouter.delete('/users/:id', (req, res) => {\n  User.deleteOne({ _id:req.params.id }, error => {\n    if (error) return res.json({ success: false, error })\n    return res.json({ success: true })\n  })\n})\n\n// Donation\nrouter.get('/donations', (req, res) => {\n  Donation.find()\n  .populate('user')\n  .populate('project')\n  .exec((error, donations) => {\n    if (error) {\n      return res.json({ success: false, data: error })\n    } else {\n      return res.json({ success: true, donations: donations })\n    }\n  })\n})\n\nrouter.get('/donations/:id', (req, res) => {\n  Donation.findById(req.params.id, (error, donation) => {\n    if (error) return res.json({ success: false, error })\n    return res.json({ success: true, donation })\n  })\n})\n\nrouter.post('/donations', (req, res) => {\n  const donation = new Donation(req.body)\n  donation.save((error, newDonation) => {\n    if (error) return res.json({ success: false, error: error })\n    return res.json({ success: true, donation: newDonation })\n  })\n})\n\n// TODO: Need delete to also refund donation\n\n// Project\nrouter.get('/projects', (req, res) => {\n  Project.find()\n  .populate('owner')\n  .exec((error, projects) => {\n    if (error) return res.json({ success: false, error: error })\n    return res.json({ success: true, projects })\n  })\n})\n\nrouter.get('/projects/:id', (req, res) => {\n  Project.findById(req.params.id, (error, project) => {\n    if (error) return res.json({ success: false, error })\n    return res.json({ success: true, project })\n  })\n})\n\nrouter.post('/projects', (req, res) => {\n  const project = new Project(req.body)\n  project.save((error, newProject) => {\n    if (error) return res.json({ success: false, error: error })\n    return res.json({ success: true, project: newProject })\n  })\n})\n\nrouter.put('/projects/:id', (req, res) => {\n  Project.findById(req.params.id, (error, project) => {\n    if (error) return res.json({ success: false, error })\n    const { name, owner, goal } = req.body\n    if (name) project.name = name\n    if (owner) project.owner = owner\n    if (goal) project.goal = goal\n    project.save((error, savedProject) => {\n      if (error) return res.json({ success: false, error })\n      return res.json({ success: true, project: savedProject })\n    })\n  })\n})\n\nrouter.delete('/projects/:id', (req, res) => {\n  Project.deleteOne({ _id:req.params.id }, error => {\n    if (error) return res.json({ success: false, error })\n    return res.json({ success: true })\n  })\n})\n// TODO: Need to refund all backers\n\napp.use('/api', router);\n\napp.listen(API_PORT, () => console.log(`Success! Listening on port ${API_PORT}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562268841752
  },
  "{\"sourceRoot\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"filename\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar UsersSchema = new Schema({\n  username: String,\n  password: String,\n  bio: String\n}, {\n  timestamps: true\n});\n\nvar _default = _mongoose[\"default\"].model('User', UsersSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJVc2Vyc1NjaGVtYSIsInVzZXJuYW1lIiwiU3RyaW5nIiwicGFzc3dvcmQiLCJiaW8iLCJ0aW1lc3RhbXBzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBR0MscUJBQVNELE1BQXhCO0FBRUEsSUFBTUUsV0FBVyxHQUFHLElBQUlGLE1BQUosQ0FBVztBQUM3QkcsRUFBQUEsUUFBUSxFQUFFQyxNQURtQjtBQUU3QkMsRUFBQUEsUUFBUSxFQUFFRCxNQUZtQjtBQUc3QkUsRUFBQUEsR0FBRyxFQUFFRjtBQUh3QixDQUFYLEVBSWpCO0FBQUVHLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBSmlCLENBQXBCOztlQU1lTixxQkFBU08sS0FBVCxDQUFlLE1BQWYsRUFBdUJOLFdBQXZCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlaXpsc2FtYW5vL0RldmVsb3BtZW50L2NvZGUvUGVyc29uYWwgUHJvamVjdHMvbWVybi10ZXN0LWFwcC9iYWNrZW5kL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcblxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbmNvbnN0IFVzZXJzU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIHVzZXJuYW1lOiBTdHJpbmcsXG4gIHBhc3N3b3JkOiBTdHJpbmcsXG4gIGJpbzogU3RyaW5nLFxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0gKVxuXG5leHBvcnQgZGVmYXVsdCBtb25nb29zZS5tb2RlbCgnVXNlcicsIFVzZXJzU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "UsersSchema",
        "username",
        "String",
        "password",
        "bio",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,WAAW,GAAG,IAAIF,MAAJ,CAAW;AAC7BG,EAAAA,QAAQ,EAAEC,MADmB;AAE7BC,EAAAA,QAAQ,EAAED,MAFmB;AAG7BE,EAAAA,GAAG,EAAEF;AAHwB,CAAX,EAIjB;AAAEG,EAAAA,UAAU,EAAE;AAAd,CAJiB,CAApB;;eAMeN,qBAASO,KAAT,CAAe,MAAf,EAAuBN,WAAvB,C",
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
      "sourcesContent": [
        "import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema\n\nconst UsersSchema = new Schema({\n  username: String,\n  password: String,\n  bio: String,\n}, { timestamps: true } )\n\nexport default mongoose.model('User', UsersSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562266475067
  },
  "{\"sourceRoot\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"filename\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/donation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/donation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/donation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/donation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
        "sourceFileName": "donation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar DonationsSchema = new Schema({\n  user: {\n    type: Schema.Types.ObjectId,\n    required: true,\n    ref: 'User'\n  },\n  project: {\n    type: Schema.Types.ObjectId,\n    required: true,\n    ref: 'Project'\n  },\n  amount: Number\n}, {\n  timestamps: true\n});\n\nvar _default = _mongoose[\"default\"].model('Donation', DonationsSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvbmF0aW9uLmpzIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vbmdvb3NlIiwiRG9uYXRpb25zU2NoZW1hIiwidXNlciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVxdWlyZWQiLCJyZWYiLCJwcm9qZWN0IiwiYW1vdW50IiwiTnVtYmVyIiwidGltZXN0YW1wcyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLHFCQUFTRCxNQUF4QjtBQUVBLElBQU1FLGVBQWUsR0FBRyxJQUFJRixNQUFKLENBQVc7QUFDL0JHLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxJQUFJLEVBQUVKLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhQyxRQURmO0FBRUpDLElBQUFBLFFBQVEsRUFBRSxJQUZOO0FBR0pDLElBQUFBLEdBQUcsRUFBRTtBQUhELEdBRHlCO0FBTS9CQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEwsSUFBQUEsSUFBSSxFQUFFSixNQUFNLENBQUNLLEtBQVAsQ0FBYUMsUUFEWjtBQUVQQyxJQUFBQSxRQUFRLEVBQUUsSUFGSDtBQUdQQyxJQUFBQSxHQUFHLEVBQUU7QUFIRSxHQU5zQjtBQVcvQkUsRUFBQUEsTUFBTSxFQUFFQztBQVh1QixDQUFYLEVBWW5CO0FBQUVDLEVBQUFBLFVBQVUsRUFBRTtBQUFkLENBWm1CLENBQXhCOztlQWNlWCxxQkFBU1ksS0FBVCxDQUFlLFVBQWYsRUFBMkJYLGVBQTNCLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xlaXpsc2FtYW5vL0RldmVsb3BtZW50L2NvZGUvUGVyc29uYWwgUHJvamVjdHMvbWVybi10ZXN0LWFwcC9iYWNrZW5kL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcblxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hXG5cbmNvbnN0IERvbmF0aW9uc1NjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICAgIHVzZXI6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgcmVmOiAnVXNlcidcbiAgICB9LFxuICAgIHByb2plY3Q6IHtcbiAgICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgcmVmOiAnUHJvamVjdCdcbiAgICB9LFxuICAgIGFtb3VudDogTnVtYmVyXG4gIH0sIHsgdGltZXN0YW1wczogdHJ1ZSB9IClcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ0RvbmF0aW9uJywgRG9uYXRpb25zU2NoZW1hKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "donation.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "DonationsSchema",
        "user",
        "type",
        "Types",
        "ObjectId",
        "required",
        "ref",
        "project",
        "amount",
        "Number",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,eAAe,GAAG,IAAIF,MAAJ,CAAW;AAC/BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADf;AAEJC,IAAAA,QAAQ,EAAE,IAFN;AAGJC,IAAAA,GAAG,EAAE;AAHD,GADyB;AAM/BC,EAAAA,OAAO,EAAE;AACPL,IAAAA,IAAI,EAAEJ,MAAM,CAACK,KAAP,CAAaC,QADZ;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,GAAG,EAAE;AAHE,GANsB;AAW/BE,EAAAA,MAAM,EAAEC;AAXuB,CAAX,EAYnB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAZmB,CAAxB;;eAceX,qBAASY,KAAT,CAAe,UAAf,EAA2BX,eAA3B,C",
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
      "sourcesContent": [
        "import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema\n\nconst DonationsSchema = new Schema({\n    user: {\n      type: Schema.Types.ObjectId,\n      required: true,\n      ref: 'User'\n    },\n    project: {\n      type: Schema.Types.ObjectId,\n      required: true,\n      ref: 'Project'\n    },\n    amount: Number\n  }, { timestamps: true } )\n\nexport default mongoose.model('Donation', DonationsSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562245151479
  },
  "{\"sourceRoot\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"filename\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/project.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/project.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/project.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models/project.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
        "sourceFileName": "project.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar ProjectsSchema = new Schema({\n  name: String,\n  owner: {\n    type: Schema.Types.ObjectId,\n    required: true,\n    ref: 'User'\n  },\n  goal: Number\n}, {\n  timestamps: true\n});\n\nvar _default = _mongoose[\"default\"].model('Project', ProjectsSchema);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3QuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwibW9uZ29vc2UiLCJQcm9qZWN0c1NjaGVtYSIsIm5hbWUiLCJTdHJpbmciLCJvd25lciIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVxdWlyZWQiLCJyZWYiLCJnb2FsIiwiTnVtYmVyIiwidGltZXN0YW1wcyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLHFCQUFTRCxNQUF4QjtBQUVBLElBQU1FLGNBQWMsR0FBRyxJQUFJRixNQUFKLENBQVc7QUFDaENHLEVBQUFBLElBQUksRUFBRUMsTUFEMEI7QUFFaENDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxJQUFJLEVBQUVOLE1BQU0sQ0FBQ08sS0FBUCxDQUFhQyxRQURkO0FBRUxDLElBQUFBLFFBQVEsRUFBRSxJQUZMO0FBR0xDLElBQUFBLEdBQUcsRUFBRTtBQUhBLEdBRnlCO0FBT2hDQyxFQUFBQSxJQUFJLEVBQUVDO0FBUDBCLENBQVgsRUFRcEI7QUFBRUMsRUFBQUEsVUFBVSxFQUFFO0FBQWQsQ0FSb0IsQ0FBdkI7O2VBVWVaLHFCQUFTYSxLQUFULENBQWUsU0FBZixFQUEwQlosY0FBMUIsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGVpemxzYW1hbm8vRGV2ZWxvcG1lbnQvY29kZS9QZXJzb25hbCBQcm9qZWN0cy9tZXJuLXRlc3QtYXBwL2JhY2tlbmQvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJ1xuXG5jb25zdCBTY2hlbWEgPSBtb25nb29zZS5TY2hlbWFcblxuY29uc3QgUHJvamVjdHNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgbmFtZTogU3RyaW5nLFxuICBvd25lcjoge1xuICAgIHR5cGU6IFNjaGVtYS5UeXBlcy5PYmplY3RJZCxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICByZWY6ICdVc2VyJ1xuICB9LFxuICBnb2FsOiBOdW1iZXJcbn0sIHsgdGltZXN0YW1wczogdHJ1ZSB9IClcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWwoJ1Byb2plY3QnLCBQcm9qZWN0c1NjaGVtYSlcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "project.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "ProjectsSchema",
        "name",
        "String",
        "owner",
        "type",
        "Types",
        "ObjectId",
        "required",
        "ref",
        "goal",
        "Number",
        "timestamps",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,cAAc,GAAG,IAAIF,MAAJ,CAAW;AAChCG,EAAAA,IAAI,EAAEC,MAD0B;AAEhCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEN,MAAM,CAACO,KAAP,CAAaC,QADd;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLC,IAAAA,GAAG,EAAE;AAHA,GAFyB;AAOhCC,EAAAA,IAAI,EAAEC;AAP0B,CAAX,EAQpB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CARoB,CAAvB;;eAUeZ,qBAASa,KAAT,CAAe,SAAf,EAA0BZ,cAA1B,C",
      "sourceRoot": "/Users/leizlsamano/Development/code/Personal Projects/mern-test-app/backend/models",
      "sourcesContent": [
        "import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema\n\nconst ProjectsSchema = new Schema({\n  name: String,\n  owner: {\n    type: Schema.Types.ObjectId,\n    required: true,\n    ref: 'User'\n  },\n  goal: Number\n}, { timestamps: true } )\n\nexport default mongoose.model('Project', ProjectsSchema)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562245271684
  }
}